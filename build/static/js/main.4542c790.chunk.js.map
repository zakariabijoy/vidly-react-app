{"version":3,"sources":["components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/logService.js","services/httpService.js","services/authService.js","components/moviesTable.jsx","services/movieService.js","services/genreService.js","components/common/paginations.jsx","utils/paginate.js","components/common/listGroup.jsx","components/common/searchBox.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Like","props","classes","liked","className","aria-hidden","onClick","style","cursor","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","data","Table","init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndPoint","apiUrl","email","password","a","http","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","MoviesTable","movie","to","title","onLike","deleteColumn","onDelete","user","authService","isAdmin","push","movies","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","success","handleLike","index","indexOf","handlePage","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Cutomers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","action","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","register","RegisterForm","userService","Logout","ProtectedRoute","component","render","App","useState","setUser","useEffect","exact","Boolean","hostname","process","REACT_APP_NAME","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4542c790.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// input : liked : boolen\r\n// output : onClick\r\n\r\nconst Like = (props) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\n// columns : array\r\n// sortColumn : object\r\n// onSort: function\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","\r\nfunction init() {\r\n\r\n}\r\n\r\nfunction log(error) {\r\n    console.log(error);\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log\r\n}","import axios from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport logger from './logService'\r\n\r\n\r\n\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status <= 500;\r\n    if (!expectedError) {\r\n        logger.log(error);\r\n        toast.error('an unexpected error occurred');\r\n\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n\r\n};","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\nconst apiEndPoint = apiUrl + '/auth';\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithJwt,\r\n    getJwt\r\n}","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport authService from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = authService.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, sortColumn, onSort } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        data={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndPoint = apiUrl + '/movies';\r\n\r\nfunction movieUrl(id) {\r\n    return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (movie._id) {\r\n        const body = { ...movie };\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n\r\n    return http.post(apiEndPoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId));\r\n}","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nexport function getGenres() {\r\n    return http.get(apiUrl + '/genres');\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  // [1 ... pagesCount].map()\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  if (pagesCount === 1) return null;\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <Link\r\n              className=\"page-link\"\r\n              to=\"/movies\"\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              {page}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n  selectedItem,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search..\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Paginations from \"./common/paginations\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    currentPage: 1,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async (movie) => {\r\n    // authorization : user should be a admin user (isAdmin property must be true for an admin user)\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n      toast.success(\"Successfully Deleted\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"this movie has already been deleted\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePage = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { currentPage, pageSize, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n    if (count === 0) return <p>There are no movies is the database</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            onItemSelect={this.handleGenreSelect}\r\n            selectedItem={this.state.selectedGenre}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              className=\"btn btn-primary\"\r\n              to=\"/movies/new\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the database</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n\r\n          <Paginations\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst Cutomers = () => {\r\n  return <h1>Cutomers</h1>;\r\n};\r\n\r\nexport default Cutomers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link text-right\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-link text-right\" to=\"/register\">\r\n                Ragister\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link text-right\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-link text-right\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\">--select {label} --</option>\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number In Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport authService from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    // call the server\r\n    try {\r\n      const { data } = this.state;\r\n      await authService.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (authService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login Form</h1>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndPoint = apiUrl + '/users';\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndPoint, {\r\n        email: user.username,\r\n        name: user.name,\r\n        password: user.password\r\n    });\r\n}","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport * as userService from \"../services/userService\";\r\nimport authService from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\").email(),\r\n    password: Joi.string().required().label(\"Password\").min(5),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    // call server\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      authService.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register Form</h1>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { Component } from \"react\";\r\nimport authService from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    authService.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport authService from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!authService.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport Cutomers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport Logout from './components/logout';\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport authService from \"./services/authService\";\nimport \"./App.css\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    const user = authService.getCurrentUser();\n    setUser(user);\n\n  }, []);\n\n  return (\n    <React.Fragment>\n      <ToastContainer />\n      <NavBar user={user} />\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/register\" component={RegisterForm}></Route>\n          <Route path=\"/login\" component={LoginForm}></Route>\n          <Route path=\"/logout\" component={Logout}></Route>\n          <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n          <Route path=\"/movies\" render={props => <Movies {...props} user={user} />}></Route>\n          <Route path=\"/customers\" component={Cutomers}></Route>\n          <Route path=\"/rentals\" component={Rentals}></Route>\n          <Route path=\"/not-found\" component={NotFound}></Route>\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n    </React.Fragment >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nconsole.log(process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter><App /></BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}